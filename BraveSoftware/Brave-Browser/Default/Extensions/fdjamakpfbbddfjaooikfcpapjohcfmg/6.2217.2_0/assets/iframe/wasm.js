const argon2=require("@dashlane/argon2-browser"),{extractRootDomain}=require("@dashlane/simple-url-parser"),argon2method={argon2d:argon2.ArgonType.Argon2d,argon2i:argon2.ArgonType.Argon2i},safeRootDomains=["dashlane.com","localhost"];let messagePort=null;function postMessageToCarbon(e){messagePort&&messagePort.postMessage(e)}function loadScript(e,o){return new Promise((function(a,r){const n=document.createElement("script");n.src=e,n.onload=function(){a()},n.onerror=function(e){r(`[iframe] Error loading ${o}: ${e}`)},document.body.appendChild(n)}))}function receivedMessageFromCarbon(e){const{argon2JsWrapperForWasmPath:o,asmPath:a,configuration:r,key:n,salt:t,wasmPath:s,jobId:i}=e;self.loadArgon2WasmModule=()=>loadScript(o,"argon2 WASM wrapper"),self.loadArgon2WasmBinary=()=>fetch(s).then((e=>e.arrayBuffer())).then((e=>new Uint8Array(e))),self.loadArgon2FallbackJsModule=()=>loadScript(a,"argon2 fallback JS module");Boolean(r)?argon2.hash({pass:new Uint8Array(n),salt:new Uint8Array(t),time:r.t_cost,mem:r.m_cost,hashLen:32,parallelism:r.parallelism,type:argon2method[r.method]}).then((function(e){postMessageToCarbon({error:null,data:e.hash,salt:t,jobId:i})})).catch((function(e){postMessageToCarbon({error:"[iframe] Argon2 key derivation abort with error, "+e,data:null,salt:t,jobId:i})})):postMessageToCarbon({error:"[iframe] Argon2 key derivation abort with error, no configuration found",data:null,salt:null,jobId:i})}function initCarbonCommunication(e){messagePort=e,messagePort.onmessage=e=>receivedMessageFromCarbon(e.data)}function wasmIframeReceivedMessage(e){const o=extractRootDomain(e.origin),a=self.chrome?.runtime?.getURL?.(""),r=a?new URL(a).hostname:null;if([...safeRootDomains,r].includes(o))switch(e.data.type){case"ping":e.source.postMessage({type:"wasmIframeReady"},e.origin);break;case"setMessagePort":initCarbonCommunication(e.data.port),e.source.postMessage({type:"wasmIframePortSetup"},e.origin)}}self.addEventListener("message",wasmIframeReceivedMessage,!1);