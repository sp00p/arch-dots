let processout,processOutForm,globalCustomerId,globalTokenId,fields={};const paymentState={card:!1,month:!1,year:!1,cvc:!1,name:!1,address:!1,city:!1,zip:!1};let formErrorDomEl;const IS_SELECTED="isSelected",WITH_ERROR="withError",safeHostNames=["app.dashlane.com","console.dashlane.com","qa.app.dashlane.com","qa.console.dashlane.com","localhost"];function addStatesToDom(e){fields.state.input.innerHTML=Object.keys(e).map((t=>`<option value="${t}">${e[t]}</option>`)).join("")}function clearValidation(e){e.error&&e.error.setAttribute("style","display:none;"),e.baseline&&e.baseline.classList.remove(WITH_ERROR),e.input&&(e.input.classList.remove(WITH_ERROR),e===fields.expirationMonth?fields.expirationYear.input.classList.remove(WITH_ERROR):e===fields.expirationYear&&fields.expirationMonth.input.classList.remove(WITH_ERROR)),formErrorDomEl.setAttribute("style","display:none;"),formErrorDomEl.innerHTML=""}function isMonthPotentiallyValid(e){return e>=1&&e<=12}function isYearPotentiallyValid(e){return/^\d{4}$/.test(e)&&e>=(new Date).getUTCFullYear()}function getFormValues(){return{name:fields.name.input.value,contact:{address1:fields.address.input.value,city:fields.city.input.value,state:fields.state.input.value||void 0,country_code:fields.country.input.value,zip:fields.zip.input.value}}}function postMessageToLeeloo(e,t,r,a){e.source.postMessage({messageType:"PROCESSOUT_TO_LEELOO",action:t,cardId:r,customerId:a},e.origin)}function initFormFields(){fields={creditCard:{type:"processout",label:document.getElementById("label-card"),labelTranslation:"creditCardNumber",input:document.getElementById("cc-wrapper"),baseline:document.getElementById("cc-baseline"),error:document.getElementById("card-error"),errorTranslation:"creditCardError"},expirationMonth:{type:"processout",label:document.getElementById("label-date"),labelTranslation:"expirationDate",input:document.getElementById("month-wrapper"),baseline:document.getElementById("month-baseline"),error:document.getElementById("month-error"),errorTranslation:"expirationError"},expirationYear:{type:"processout",label:document.getElementById("label-date"),labelTranslation:"expirationDate",input:document.getElementById("year-wrapper"),baseline:document.getElementById("year-baseline"),error:document.getElementById("year-error"),errorTranslation:"expirationError"},cvc:{type:"processout",label:document.getElementById("label-code"),labelTranslation:"securityCode",input:document.getElementById("cvc-wrapper"),baseline:document.getElementById("cvc-baseline"),error:document.getElementById("code-error"),errorTranslation:"securityError"},name:{type:"input",label:document.getElementById("label-name"),labelTranslation:"cardHolderName",input:document.getElementById("cardholdername"),baseline:document.getElementById("name-baseline"),error:document.getElementById("name-error"),errorTranslation:"cardHolderError"},address:{type:"input",label:document.getElementById("label-address"),labelTranslation:"address",input:document.getElementById("cardholderaddress"),baseline:document.getElementById("address-baseline"),error:document.getElementById("address-error"),errorTranslation:"addressError"},city:{type:"input",label:document.getElementById("label-city"),labelTranslation:"city",input:document.getElementById("cardholdercity"),baseline:document.getElementById("city-baseline"),error:document.getElementById("city-error"),errorTranslation:"cityError"},zip:{type:"input",label:document.getElementById("label-zip"),labelTranslation:"zipCode",input:document.getElementById("cardholderzip"),baseline:document.getElementById("zip-baseline"),error:document.getElementById("zip-error"),errorTranslation:"zipCodeError"},country:{type:"select",label:document.getElementById("label-country"),labelTranslation:"country",input:document.getElementById("cardholdercountry"),baseline:document.getElementById("country-baseline"),error:void 0,errorTranslation:void 0},state:{type:"select",label:document.getElementById("label-country-state"),labelTranslation:"state",input:document.getElementById("cardholderstate"),baseline:document.getElementById("state-baseline"),error:void 0,errorTranslation:void 0}},formErrorDomEl=document.getElementById("form-error")}function initCountries(e,t){fields.country.input.innerHTML=Object.keys(e).map((t=>`<option value="${t}" ${"US"===t?"selected":""}>${e[t]}</option>`)).join(""),addStatesToDom(t.US);const r=document.getElementById("country-state-container");fields.country.input.addEventListener("change",(e=>{t[e.target.value]?(addStatesToDom(t[e.target.value]),r.classList.remove("hidden")):(addStatesToDom([]),r.classList.add("hidden"))}))}function initCustomStyle(e){void 0!==e&&document.body.classList.add(e)}function initTranslations(e,t){Object.keys(fields).map((e=>fields[e])).filter((t=>t.label&&t.labelTranslation&&e[t.labelTranslation])).forEach((t=>{t.label.innerHTML=e[t.labelTranslation]})),Object.keys(fields).map((e=>fields[e])).filter((e=>"input"===e.type)).filter((t=>t.label&&t.labelTranslation&&e[t.labelTranslation])).forEach((t=>{t.input.placeholder=`${e[t.labelTranslation]}`})),Object.keys(fields).map((e=>fields[e])).filter((e=>e.error&&e.errorTranslation&&t[e.errorTranslation])).forEach((e=>{e.error.innerHTML=t[e.errorTranslation]}))}function setupProcessOut(e,t){processout=new ProcessOut.ProcessOut(t);const r=document.getElementById("card-form");processout.setupForm(r,{fontSize:"14px",lineHeight:"18px",color:"#474747",fontFamily:'"Source Sans Pro", Helvetica, Arial, "Lucida Grande", sans-serif',"::placeholder":{color:"#777"}},(t=>{processOutForm=t,fields.creditCard.poField=processOutForm.getNumberField(),fields.expirationMonth.poField=processOutForm.getExpiryMonthField(),fields.expirationYear.poField=processOutForm.getExpiryYearField(),fields.cvc.poField=processOutForm.getCVCField(),Object.keys(fields).map((e=>fields[e])).filter((e=>"processout"===e.type)).forEach((e=>{e.poField.on("focus",(()=>{e.input.classList.add(IS_SELECTED),e.baseline.classList.add(IS_SELECTED)})),e.poField.on("blur",(()=>{e.input.classList.remove(IS_SELECTED),e.baseline.classList.remove(IS_SELECTED)}))})),fields.creditCard.poField.on("input",(e=>{clearValidation(fields.creditCard),paymentState.card=e.valid})),fields.expirationMonth.poField.on("input",(({month:e})=>{clearValidation(fields.expirationMonth),paymentState.month=isMonthPotentiallyValid(e)})),fields.expirationYear.poField.on("input",(({year:e})=>{clearValidation(fields.expirationYear),paymentState.year=isYearPotentiallyValid(e)})),fields.cvc.poField.on("input",(e=>{clearValidation(fields.cvc),paymentState.cvc=e.valid&&!e.empty})),postMessageToLeeloo(e,"INIT_SUCCESSFUL")}),(()=>postMessageToLeeloo(e,"INIT_FAILED")))}function setupInputFieldValidation(){Object.keys(fields).map((e=>fields[e])).filter((e=>"input"===e.type)).forEach((e=>{e.input.addEventListener("focus",(()=>{e.input.classList.add(IS_SELECTED),e.baseline.classList.add(IS_SELECTED)})),e.input.addEventListener("blur",(()=>{e.input.classList.remove(IS_SELECTED),e.baseline.classList.remove(IS_SELECTED)})),e.input.addEventListener("input",(()=>{clearValidation(e)}))})),["name","address","city","zip"].forEach((e=>{fields[e].input.addEventListener("change",(t=>{paymentState[e]=""!==t.target.value.trim()}))}))}function showFormError(e){formErrorDomEl.setAttribute("style",""),formErrorDomEl.innerHTML=e}function displayExpirationMonthError(){fields.expirationMonth.error.setAttribute("style",""),fields.expirationMonth.baseline.classList.add(WITH_ERROR),fields.expirationMonth.input.classList.add(WITH_ERROR)}function displayExpirationYearError(){fields.expirationYear.error.setAttribute("style",""),fields.expirationYear.baseline.classList.add(WITH_ERROR),fields.expirationYear.input.classList.add(WITH_ERROR)}function showValidationErrors(e){paymentState.card||(fields.creditCard.error.setAttribute("style",""),fields.creditCard.baseline.classList.add(WITH_ERROR),fields.creditCard.input.classList.add(WITH_ERROR)),paymentState.month||displayExpirationMonthError(),paymentState.year||displayExpirationYearError(),["cvc","name","address","city","zip"].forEach((e=>{paymentState[e]||(fields[e].error.setAttribute("style",""),fields[e].baseline.classList.add(WITH_ERROR),fields[e].input.classList.add(WITH_ERROR))})),postMessageToLeeloo(e,"PROCESSOUT_FAILURE")}function handleProcessOutErrors(e,t){switch(t.code){default:showFormError(t.message);break;case"card.expired":case"card.invalid-date":displayExpirationYearError(),displayExpirationMonthError();break;case"card.invalid-month":displayExpirationMonthError();break;case"card.invalid-year":displayExpirationYearError();break;case"card.invalid-cvc":fields.cvc.error.setAttribute("style",""),fields.cvc.baseline.classList.add(WITH_ERROR),fields.cvc.input.classList.add(WITH_ERROR)}postMessageToLeeloo(e,"PROCESSOUT_FAILURE")}function initForm(e){const{apiKey:t}=e.data,{countries:r,translations:a,errors:o,countriesStates:n,style:i}=e.data.data;e.data.card&&(globalCustomerId=e.data.card.customerId,globalTokenId=e.data.card.tokenId),initFormFields(),initCountries(r,n),initCustomStyle(i),initTranslations(a,o),setupProcessOut(e,t),setupInputFieldValidation()}const hasValidationErrors=()=>Object.keys(paymentState).some((e=>!paymentState[e])),submitForm=e=>{hasValidationErrors()?showValidationErrors(e):processout.tokenize(processOutForm,getFormValues(),(t=>{processout.makeCardToken(t,globalCustomerId,globalTokenId,getFormValues(),(()=>{postMessageToLeeloo(e,"TOKENIZE",t,globalCustomerId)}),(t=>{handleProcessOutErrors(e,t)}))}),(function(t){handleProcessOutErrors(e,t)}))};function getCardToken(e){hasValidationErrors()?showValidationErrors(e):processout.tokenize(processOutForm,getFormValues(),(function(t){postMessageToLeeloo(e,"TOKENIZE",t)}),(function(t){handleProcessOutErrors(e,t)}))}function makePayment(e){if(hasValidationErrors())showValidationErrors(e);else{const{data:t}=e;processout.makeCardPayment(t.invoiceId,t.customerId,{authorize_only:!0},(function(t){postMessageToLeeloo(e,"INVOICEID",t)}),(function(t){handleProcessOutErrors(e,t)}))}}function messageReceivedFromLeeloo(e){if("LEELOO_TO_PROCESSOUT"!==e.data.messageType)return;const t=new URL(e.origin).hostname,r=self.chrome?.runtime?.getURL?.("")??"",a=r?new URL(r).hostname:null;if([...safeHostNames,a].includes(t))switch(e.data.action){case"INIT":initForm(e);break;case"SUBMIT":submitForm(e);break;case"GET_CARD_TOKEN":getCardToken(e);break;case"MAKE_PAYMENT":makePayment(e)}}window.addEventListener("message",messageReceivedFromLeeloo,!1);